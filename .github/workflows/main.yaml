name: Continuous integration

on:
  push:
    branches:
      - master
      - "[0-9]+.[0-9]+"
    tags:
      - "*"
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  pre-commit:
    name: Check with pre-commit and Prospector
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.13"
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Print environment information
        run: c2cciutils-env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
        if: matrix.python-version != '3.7'
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()

      - name: Install with Poetry
        run: poetry install

      - name: Prospector
        run: |
          poetry run prospector --output-format=pylint --die-on-tool-error

  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    needs: pre-commit

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Install with Poetry
        run: poetry install

      - name: Tests
        run: poetry run pytest -vv

  publish:
    name: Publish
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    needs: main

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.13"
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Login with OIDC (OpenID Connect)
        run: .github/pypi-login
      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch || true
        if: failure()
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()
permissions:
  contents: write
  id-token: write
